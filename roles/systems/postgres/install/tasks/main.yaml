# Copyright Â© 2022-2023, SAS Institute Inc., Cary, NC, USA. All Rights Reserved.
# SPDX-License-Identifier: Apache-2.0

---
- name: Installing the PostgreSQL gpg key
  ansible.builtin.apt_key:
    url: https://www.postgresql.org/media/keys/ACCC4CF8.asc
    keyring: /usr/share/keyrings/postgres-archive-keyring.gpg
    state: present
  when: ansible_distribution == "Ubuntu" and (ansible_distribution_version == "20.04" or ansible_distribution_version == "22.04")
  tags:
    - install
    - update

- name: Installing the PostgreSQL repo
  ansible.builtin.apt_repository:
    repo: deb [arch=amd64 signed-by=/usr/share/keyrings/postgres-archive-keyring.gpg] http://apt.postgresql.org/pub/repos/apt {{ ansible_distribution_release }}-pgdg main
    state: present
  when: ansible_distribution == "Ubuntu" and (ansible_distribution_version == "20.04" or ansible_distribution_version == "22.04")
  tags:
    - install
    - update

- name: Install postgres
  ansible.builtin.apt:
    pkg:
      - "postgresql-{{ postgres_server_version }}"
      - "postgresql-client-{{ postgres_server_version }}"
      - python3-psycopg2
      - acl
    state: present
    update_cache: true
  tags:
    - install
    - update

- name: Update postgres admin user's password
  become: true
  become_user: postgres
  community.postgresql.postgresql_user:
    name: postgres
    password: "{{ postgres_administrator_password }}"
    expires: "infinity"
    state: present
  tags:
    - install
    - update

# TODO: This should be adjusted to enhance security
- name: Alter postgresql.conf - Update listen_addresses
  ansible.builtin.lineinfile:
    path: /etc/postgresql/{{ postgres_server_version }}/main/postgresql.conf
    regexp: '^#listen_addresses'
    line: "listen_addresses = '*'"
  tags:
    - install
    - update

- name: Postgres SSL with user supplied cert and key - verify both defined
  ansible.builtin.fail:
    msg: "User has set postgres_server_ssl to on, but has only defined one of 'postgres_server_ssl_cert_file,
          postgres_server_ssl_key_file'. Ensure that both these variables are set, or remove both of them from your
          inventory file to use the Ubuntu system default cert and key files."
  when:
    - postgres_server_ssl|lower == "on"
    - (postgres_server_ssl_cert_file|length == 0) and (postgres_server_ssl_key_file|length > 0)
    - (postgres_server_ssl_cert_file|length > 0) and (postgres_server_ssl_key_file|length == 0)
  tags:
    - install
    - update

- name: Copy user supplied cert and key to Postgres host
  when:
    - ansible_distribution == "Ubuntu" and (ansible_distribution_version == "20.04" or ansible_distribution_version == "22.04")
    - postgres_server_ssl|lower == "on"
    - (postgres_server_ssl_cert_file|length > 0) and (postgres_server_ssl_key_file|length > 0)
  tags:
    - install
    - update
  block:
    - name: Add user supplied SSL Cert
      ansible.builtin.copy:
        src: "{{ postgres_server_ssl_cert_file }}"
        dest: /etc/ssl/certs/
        owner: root
        group: root
        mode: "0644"
      register: cert_result
    - name: Add user supplied SSL Key
      ansible.builtin.copy:
        src: "{{ postgres_server_ssl_key_file }}"
        dest: /etc/ssl/private/
        owner: root
        group: ssl-cert
        mode: "0640"
      register: key_result
    - name: Set postgres_server_ssl_cert_file_dest and postgres_server_ssl_key_file_dest
      ansible.builtin.set_fact:
        postgres_server_ssl_cert_file_dest: "{{ cert_result.dest }}"
        postgres_server_ssl_key_file_dest: "{{ key_result.dest }}"

- name: Create copy of Ubuntu default cert and key
  when:
    - ansible_distribution == "Ubuntu" and (ansible_distribution_version == "20.04" or ansible_distribution_version == "22.04")
    - postgres_server_ssl|lower == "on"
    - (postgres_server_ssl_cert_file|length == 0) and (postgres_server_ssl_key_file|length == 0)
  tags:
    - install
    - update
  block:
    - name: Copy Ubuntu default SSL Cert
      ansible.builtin.copy:
        src: /etc/ssl/certs/ssl-cert-snakeoil.pem
        dest: "/etc/ssl/certs/ssl-cert-sas-{{ ansible_hostname }}.pem"
        owner: root
        group: root
        mode: "0644"
        remote_src: true
      register: cert_result
    - name: Copy Ubuntu default SSL Key
      ansible.builtin.copy:
        src: /etc/ssl/private/ssl-cert-snakeoil.key
        dest: "/etc/ssl/private/ssl-cert-sas-{{ ansible_hostname }}.key"
        owner: root
        group: ssl-cert
        mode: "0640"
        remote_src: true
      register: key_result
    - name: Fetch SSL Cert
      ansible.builtin.fetch:
        src: "{{ cert_result.dest }}"
        dest: "{{ inventory_dir }}/"
        flat: true
    - name: Fetch SSL Key
      ansible.builtin.fetch:
        src: "{{ key_result.dest }}"
        dest: "{{ inventory_dir }}/"
        flat: true
    - name: Set postgres_server_ssl_cert_file_dest and postgres_server_ssl_key_file_dest
      ansible.builtin.set_fact:
        postgres_server_ssl_cert_file_dest: "{{ cert_result.dest }}"
        postgres_server_ssl_key_file_dest: "{{ key_result.dest }}"

- name: Alter postgresql.conf - Update ssl
  ansible.builtin.lineinfile:
    path: /etc/postgresql/{{ postgres_server_version }}/main/postgresql.conf
    regexp: '^ssl = (on|off)'
    line: "ssl = {{ postgres_server_ssl }}"
  tags:
    - install
    - update

- name: Alter postgresql.conf - Update ssl_cert_file
  ansible.builtin.lineinfile:
    path: /etc/postgresql/{{ postgres_server_version }}/main/postgresql.conf
    regexp: '^ssl_cert_file ='
    line: "ssl_cert_file = '{{ postgres_server_ssl_cert_file_dest }}'"
  when:
    - postgres_server_ssl|lower == "on"
    - (postgres_server_ssl_cert_file_dest|length > 0) and (postgres_server_ssl_key_file_dest|length > 0)
  tags:
    - install
    - update

- name: Alter postgresql.conf - Update ssl_key_file
  ansible.builtin.lineinfile:
    path: /etc/postgresql/{{ postgres_server_version }}/main/postgresql.conf
    regexp: '^ssl_key_file ='
    line: "ssl_key_file = '{{ postgres_server_ssl_key_file_dest }}'"
  when:
    - postgres_server_ssl|lower == "on"
    - (postgres_server_ssl_cert_file_dest|length > 0) and (postgres_server_ssl_key_file_dest|length > 0)
  tags:
    - install
    - update

# TODO: This should be adjusted to enhance security
- name: Alter pg_hba.conf
  ansible.builtin.lineinfile:
    path: /etc/postgresql/{{ postgres_server_version }}/main/pg_hba.conf
    line: "{{ item }}"
  with_items:
    - '#'
    - '# Allow all hosts ipv4/ipv6'
    - '#'
    - 'host all all 0.0.0.0/0 md5'
    - 'host all all ::/0  md5'
  tags:
    - install
    - update

- name: Enable/Restart postgres daemon
  ansible.builtin.systemd:
    name: postgresql
    state: restarted
    enabled: true
  tags:
    - install
    - update

- name: Create admin postgres user
  become: true
  become_user: postgres
  ansible.builtin.shell: |
    echo "CREATE ROLE {{ postgres_administrator_login }} WITH SUPERUSER CREATEDB CREATEROLE REPLICATION LOGIN PASSWORD '{{ postgres_administrator_password }}';" > /tmp/postgres_databases.psql
    psql -f /tmp/postgres_databases.psql
  when: postgres_server_name != "default"
  tags:
    - install
    - update
