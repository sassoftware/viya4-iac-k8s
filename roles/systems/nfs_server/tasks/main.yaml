# Copyright Â© 2022-2023, SAS Institute Inc., Cary, NC, USA. All Rights Reserved.
# SPDX-License-Identifier: Apache-2.0

---
- name: Install nfs server software
  ansible.builtin.package:
    name: "{{ item }}"
    state: present
  with_items:
    - nfs-kernel-server
    - rpcbind
  when: ansible_distribution == "Ubuntu" and (ansible_distribution_version == "20.04" or ansible_distribution_version == "22.04")
  tags:
    - install
    - update

- name: Setting up /export nfs mount point
  tags:
    - install
    - update
  block:
    - name: Create nfs mount point
      ansible.builtin.file:
        path: /export
        state: directory
        owner: nobody
        group: nogroup
        mode: "0777"
      when: ansible_distribution == "Ubuntu" and (ansible_distribution_version == "20.04" or ansible_distribution_version == "22.04")

    - name: Test for export mount point
      ansible.builtin.shell: grep -c "^/export" /etc/exports || true
      register: exports_file_rc

    # TODO - Determine access CIDR for /export mount and cluster. * is for POC
    # TODO - Verify these are the correct nfs options needed
    - name: Add exported mount point to /etc/exports file - New entry
      ansible.builtin.lineinfile:
        path: /etc/exports
        line: /export    *(rw,no_root_squash,async,insecure,crossmnt,no_subtree_check)
      when: exports_file_rc.stdout == "0"

    - name: Add exported mount point to /etc/exports file - Update entry
      ansible.builtin.lineinfile:
        path: /etc/exports
        regexp: '^/export'
        line: /export    *(rw,no_root_squash,async,insecure,crossmnt,no_subtree_check)
      when: exports_file_rc.stdout != "0"

- name: Setting up /srv/nfs/kubernetes/sc/default nfs mount point
  tags:
    - install
    - update
  block:
    - name: Create nfs mount point
      ansible.builtin.file:
        path: /srv/nfs/kubernetes/sc/default
        state: directory
        owner: nobody
        group: nogroup
        mode: "0777"
      when: ansible_distribution == "Ubuntu" and (ansible_distribution_version == "20.04" or ansible_distribution_version == "22.04")

    - name: Test for export mount point
      ansible.builtin.shell: grep -c "^/srv/nfs/kubernetes/sc/default" /etc/exports || true
      register: kubernetes_sc_default_file_rc

    # TODO - Determine access CIDR for /export mount and cluster. * is for POC
    # TODO - Verify these are the correct nfs options needed
    - name: Add exported mount point to /etc/exports file - New entry
      ansible.builtin.lineinfile:
        path: /etc/exports
        line: /srv/nfs/kubernetes/sc/default    *(rw,no_root_squash,async,insecure,crossmnt,no_subtree_check)
      when: kubernetes_sc_default_file_rc.stdout == "0"

    - name: Add exported mount point to /etc/exports file - Update entry
      ansible.builtin.lineinfile:
        path: /etc/exports
        regexp: '^/srv/nfs/kubernetes/sc/default'
        line: /srv/nfs/kubernetes/sc/default    *(rw,no_root_squash,async,insecure,crossmnt,no_subtree_check)
      when: kubernetes_sc_default_file_rc.stdout != "0"

- name: Export file system
  ansible.builtin.command: exportfs -a
  when: ansible_distribution == "Ubuntu" and (ansible_distribution_version == "20.04" or ansible_distribution_version == "22.04")
  tags:
    - install
    - update

- name: Start the nfs_kernel_server, portmap, and rpc-statd
  ansible.builtin.systemd:
    name: "{{ item }}"
    enabled: true
    state: restarted
  with_items:
    - nfs-server
    - portmap
    - rpc-statd
  when: ansible_distribution == "Ubuntu" and (ansible_distribution_version == "20.04" or ansible_distribution_version == "22.04")
  tags:
    - install
    - update
