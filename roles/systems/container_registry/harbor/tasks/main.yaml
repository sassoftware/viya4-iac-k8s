# Copyright Â© 2022-2023, SAS Institute Inc., Cary, NC, USA. All Rights Reserved.
# SPDX-License-Identifier: Apache-2.0

---
# Task to remove all Docker artifacts
- name: Remove all Docker container, volumes, networks
  ansible.builtin.shell: |
    docker system prune -af --volumes
  ignore_errors: true
  tags:
    - uninstall

# Task to Remove existing Docker installations
- name: Uninstall old Docker versions
  ansible.builtin.package:
    name: "{{ packages }}"
    state: absent
  vars:
    packages:
      - docker
      - docker-engine
      - docker.io
      - containerd
      - runc
  ignore_errors: true
  tags:
    - install

# Install required packages for Docker
- name: Install required packages
  ansible.builtin.package:
    name: "{{ packages }}"
    state: present
  vars:
    packages:
      - apt-transport-https # Also needed for kubeadm tooling
      - ca-certificates     # Also needed for kubeadm tooling
      - curl                # Also needed for kubeadm tooling
      - gnupg
      - lsb-release
  tags:
    - install
    - update

# Installing the Docker gpg key
- name: Installing the Docker gpg key
  ansible.builtin.apt_key:
    url: https://download.docker.com/linux/ubuntu/gpg
    keyring: /usr/share/keyrings/docker-archive-keyring.gpg
    state: present
  when: ansible_distribution == "Ubuntu" and (ansible_distribution_version == "20.04" or ansible_distribution_version == "22.04")
  tags:
    - install
    - update

# Installing the repo
- name: Installing the repo
  ansible.builtin.apt_repository:
    repo: deb [arch=amd64 signed-by=/usr/share/keyrings/docker-archive-keyring.gpg] https://download.docker.com/linux/ubuntu {{ ansible_distribution_release }} stable
    state: present
  when: ansible_distribution == "Ubuntu" and (ansible_distribution_version == "20.04" or ansible_distribution_version == "22.04")
  tags:
    - install
    - update

# Installing Docker
- name: Installing docker
  ansible.builtin.package:
    name: "{{ packages }}"
    state: present
  vars:
    packages:
      - docker-ce
      - docker-ce-cli
      - docker-compose
      - containerd.io
  tags:
    - install
    - update

# NOTE: Paths are relative to the base task not the running
#       task given it's being included for generalization
- name: Copy docker daemon.json for cgroup2 support
  ansible.builtin.copy:
    src: daemon.json
    dest: /etc/docker/daemon.json
  tags:
    - install

- name: Create the docker group
  ansible.builtin.group:
    name: docker
    state: present
  tags:
    - install
    - update

# TODO: User name is based on physical or VM user. Here the
#       value is devops
- name: Add user to the docker group
  ansible.builtin.user:
    name: "{{ item }}"
    groups: docker
    append: true
  with_items:
    - devops
    - ubuntu
  when: ansible_distribution == "Ubuntu" and (ansible_distribution_version == "20.04" or ansible_distribution_version == "22.04")
  tags:
    - install
    - update

# NOTE: Must do these in 2 steps as the ansible.builtin.systemd module does not accept globs
- name: Setting up docker to start on boot
  ansible.builtin.systemd:
    name: docker.service
    enabled: true
  tags:
    - install
    - update

- name: Setting up containerd to start on boot
  ansible.builtin.systemd:
    name: containerd.service
    enabled: true
  tags:
    - install
    - update

#
# containerd - https://kubernetes.io/docs/setup/production-environment/container-runtimes/#containerd
#
- name: Add module load file for containerd
  ansible.builtin.copy:
    dest: "/etc/modules-load.d/containerd.conf"
    content: |
      overlay
      br_netfilter
  tags:
    - install
    - update

- name: Add modules to running system for containerd
  ansible.builtin.shell: |
    modprobe overlay
    modprobe br_netfilter
  tags:
    - install
    - update

# NOTE: Added net.ipv4.conf.all.rp_filter for Calico CNI
- name: IP Table - File Update
  ansible.builtin.copy:
    dest: "/etc/sysctl.d/99-kubernetes-cri.conf"
    content: |
      net.bridge.bridge-nf-call-ip6tables = 1
      net.bridge.bridge-nf-call-iptables  = 1
      net.ipv4.ip_forward                 = 1
      net.ipv4.conf.all.rp_filter         = 1
  tags:
    - install
    - update

- name: IP Table - System Enable
  ansible.builtin.command: /sbin/sysctl --system
  tags:
    - install
    - update

- name: Restart systemd
  ansible.builtin.systemd:
    daemon_reload: true
  tags:
    - install
    - update

- name: Download Harbor
  ansible.builtin.get_url:
    url: https://github.com/goharbor/harbor/releases/download/v2.6.0/harbor-offline-installer-v2.6.0.tgz
    dest: /tmp/harbor-offline-installer-v2.6.0.tgz
    mode: "0755"
  tags:
    - install
    - update

- name: Extract Harbor installer
  ansible.builtin.unarchive:
    src: /tmp/harbor-offline-installer-v2.6.0.tgz
    dest: /tmp
    remote_src: true
  tags:
    - install
    - update

# - name: Configure harbor.yml file

# - name: Run install.sh for Harbor

# - name: Clean up Harbor installer
