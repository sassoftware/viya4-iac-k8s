# Copyright Â© 2022-2023, SAS Institute Inc., Cary, NC, USA. All Rights Reserved.
# SPDX-License-Identifier: Apache-2.0

---
# Task to remove all containerd artifacts
- name: Remove all containderd container, volumes, networks
  command: crictl system prune -af --volumes
  ignore_errors: true
  tags:
    - uninstall

# Task to Remove existing containerd installations
- name: Uninstall old Docker/Containerd versions
  ansible.builtin.package:
    name: "{{ packages }}"
    state: absent
  vars:
    packages:
      - docker
      - docker-engine
      - docker.io
      - containerd
      - containerd.io
      - runc
  ignore_errors: true
  tags:
    - install

# Install required packages for containerd
- name: Install required packages
  ansible.builtin.package:
    name: "{{ packages }}"
    state: present
  vars:
    packages:
      - apt-transport-https # Also needed for kubeadm tooling
      - ca-certificates     # Also needed for kubeadm tooling
      - curl                # Also needed for kubeadm tooling
      - gnupg2
      - lsb-release
      - software-properties-common
  tags:
    - install
    - update

#
# containerd - https://kubernetes.io/docs/setup/production-environment/container-runtimes/#containerd
#
- name: Add module load file for containerd
  ansible.builtin.copy:
    dest: "/etc/modules-load.d/containerd.conf"
    content: |
      overlay
      br_netfilter
  tags:
    - install
    - update

- name: Add modules to running system for containerd
  ansible.builtin.shell: |
    modprobe overlay
    modprobe br_netfilter
  tags:
    - install
    - update

# NOTE: Added net.ipv4.conf.all.rp_filter for Calico CNI
- name: IP Table - File Update
  ansible.builtin.copy:
    dest: "/etc/sysctl.d/99-kubernetes-cri.conf"
    content: |
      net.bridge.bridge-nf-call-ip6tables = 1
      net.bridge.bridge-nf-call-iptables  = 1
      net.ipv4.ip_forward                 = 1
      net.ipv4.conf.all.rp_filter         = 1
  tags:
    - install
    - update

- name: IP Table - System Enable
  ansible.builtin.command: /sbin/sysctl --system
  tags:
    - install
    - update

- name: Installing the Docker gpg key for containerd.io
  ansible.builtin.apt_key:
    url: https://download.docker.com/linux/ubuntu/gpg
    keyring: /usr/share/keyrings/docker-archive-keyring.gpg
    state: present
  when: ansible_distribution == "Ubuntu" and (ansible_distribution_version == "20.04" or ansible_distribution_version == "22.04")
  tags:
    - install
    - update

- name: Adding the Docker repo for containerd.io
  ansible.builtin.apt_repository:
    repo: deb [arch=amd64 signed-by=/usr/share/keyrings/docker-archive-keyring.gpg] https://download.docker.com/linux/ubuntu {{ ansible_distribution_release }} stable
    state: present
  when: ansible_distribution == "Ubuntu" and (ansible_distribution_version == "20.04" or ansible_distribution_version == "22.04")
  tags:
    - install
    - update

- name: Set containerd.io package debian revision if not specified
  set_fact:
    kubernetes_cri_deb_rev: "-*"
  when: kubernetes_cri_version | regex_search("^(\d+\.)(\d+\.)(\d+)$")
  tags:
    - install
    - update

- name: Installing containerd.io
  ansible.builtin.package:
    name: "{{ packages }}"
    state: present
  vars:
    packages:
      - "containerd.io{% if kubernetes_cri_version is defined and kubernetes_cri_version %}={{ kubernetes_cri_version }}{{ kubernetes_cri_deb_rev }}{%endif %}"
  when: ansible_distribution == "Ubuntu" and (ansible_distribution_version == "20.04" or ansible_distribution_version == "22.04")
  tags:
    - install
    - update

# TODO: Verify this needs an OS guard for package. Currently
#       only tested with Ubuntu 22.04 LTS
#
# Installing containerd
# - name: Installing containerd
#   ansible.builtin.package:
#     name: "{{ packages }}"
#     state: present
#   vars:
#     packages:
#     - containerd
#   when: ansible_distribution == "Ubuntu" and (ansible_distribution_version == "20.04" or ansible_distribution_version == "22.04")
#   tags:
#     - install
#     - update

- name: Create /etc/containerd directory
  ansible.builtin.file:
    path: /etc/containerd
    state: directory
    mode: "0755"
  tags:
    - install
    - update

- name: Create containerd configuration file
  ansible.builtin.shell: |
    containerd config default > /etc/containerd/config.toml
  tags:
    - install
    - update

- name: Enable systemd cgroups for containerd
  ansible.builtin.lineinfile:
    path: /etc/containerd/config.toml
    regexp: '^            SystemdCgroup = false'
    line: '            SystemdCgroup = true'
  tags:
    - install
    - update

# - name: Enable metrics for containerd
#   ansible.builtin.replace:
#     path: /etc/containerd/config.toml
#     regexp: '(^\[metrics\][\s\S]*)\[plugins\]'
#     replace: |-
#       [metrics]
#         address = "0.0.0.0:10257"
#         grpc_histogram = true

#       [plugins]
#   tags:
#     - install
#     - update

- name: Enabling and starting containerd to start now and on boot
  ansible.builtin.systemd:
    name: containerd.service
    enabled: true
    state: restarted
  tags:
    - install
    - update
