# Ansible items
ansible_user     : "${ ansible_user }"
ansible_password : "${ ansible_password }"

# VM items
vm_os   : "ubuntu" # Choices : [ubuntu|rhel] - Ubuntu 20.04 LTS / RHEL ???
vm_arch : "amd64"  # Choices : [amd64] - 64-bit OS / ???

# System items
enable_cgroup_v2    : true                       # TODO - If needed hookup or remove flag
system_ssh_keys_dir : "${ system_ssh_keys_dir }" # Directory holding public keys to be used on each system

# Kubernetes - Common
#
# TODO: kubernetes_upgrade_allowed needs to be implemented to either
#       add or remove locks on the kubeadm, kubelet, kubectl packages
#
kubernetes_cluster_name    : "${ cluster_name }"
kubernetes_version         : "${ cluster_version }"
kubernetes_upgrade_allowed : true
kubernetes_arch            : "{{ vm_arch }}"
kubernetes_cni             : "${ cluster_cni }"
kubernetes_cri             : "${ cluster_cri }"
kubernetes_service_subnet  : "${ cluster_service_subnet }"
kubernetes_pod_subnet      : "${ cluster_pod_subnet }"

# Kubernetes - VIP : https://kube-vip.io
# 
# Useful links:
#
#   VIP IP : https://kube-vip.chipzoller.dev/docs/installation/static/
#   VIP Cloud Provider IP Range : https://kube-vip.chipzoller.dev/docs/usage/cloud-provider/#the-kube-vip-cloud-provider-configmap
#
kubernetes_vip_version              : "${ kube_vip_version }"
kubernetes_vip_interface            : "${ kube_vip_interface }"
kubernetes_vip_ip                   : "${ kube_vip_ip }"
kubernetes_vip_loadbalanced_dns     : "${ kube_vip_dns }"
kubernetes_vip_cloud_provider_range : "${ kube_vip_range }"

# Kubernetes - Control Plane
control_plane_ssh_key_name : ${ control_plane_ssh_key_name }

# Kubernetes - Compute Nodes

%{ if length(jump_ip) != 0 ~}
# Jump Server
jump_ip : "${jump_ip}"
%{ endif ~}

%{ if length(nfs_ip) != 0 ~}
# NFS Server
nfs_ip  : "${nfs_ip}"
%{ endif ~}
